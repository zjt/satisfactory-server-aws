{
  "Comment": "A description of my state machine",
  "StartAt": "Ec2InstanceRunning",
  "States": {
    "Ec2InstanceRunning": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.detail.instance-id",
          "StringEquals": "PLACEHOLDER",
          "Next": "DescribeInstances"
        }
      ],
      "Default": "WrongInstance"
    },
    "DescribeInstances": {
      "Type": "Task",
      "Parameters": {},
      "Resource": "arn:aws:states:::aws-sdk:ec2:describeInstances",
      "Next": "Map"
    },
    "Map": {
      "Type": "Map",
      "Iterator": {
        "StartAt": "IsSatisfactoryInstance",
        "States": {
          "IsSatisfactoryInstance": {
            "Type": "Choice",
            "Choices": [
              {
                "Variable": "$.Instances[0].InstanceId",
                "StringEquals": "PLACEHOLDER",
                "Next": "IsRunning"
              }
            ],
            "Default": "Skip"
          },
          "IsRunning": {
            "Type": "Choice",
            "Choices": [
              {
                "Variable": "$.Instances[0].State.Name",
                "StringEquals": "running",
                "Next": "RunningIP"
              }
            ],
            "Default": "NotRunning"
          },
          "NotRunning": {
            "Type": "Task",
            "Parameters": {
              "Name": "SatisfactoryNotRunning",
              "Type": "String",
              "Overwrite": "True",
              "Value": "timestamp"
            },
            "Resource": "arn:aws:states:::aws-sdk:ssm:putParameter",
            "Next": "GetParameter"
          },
          "GetParameter": {
            "Type": "Task",
            "Next": "DiscordServerDown",
            "Parameters": {
              "Name": "discordAPIEndpoint"
            },
            "Resource": "arn:aws:states:::aws-sdk:ssm:getParameter"
          },
          "DiscordServerDown": {
            "Type": "Task",
            "Resource": "arn:aws:states:::apigateway:invoke",
            "Parameters": {
              "ApiEndpoint.$": "$.Parameter.Value",
              "Method": "POST",
              "Headers": {
                "Content-Type": [
                  "application/json"
                ]
              },
              "Stage": "prod",
              "Path": "/",
              "QueryParameters": {},
              "RequestBody": {
                "content": "PLACEHOLDER"
              },
              "AuthType": "IAM_ROLE"
            },
            "End": true
          },
          "RunningIP": {
            "Type": "Task",
            "Parameters": {
              "Name": "SatisfactoryIP",
              "Type": "String",
              "Overwrite": "True",
              "Value.$": "$.Instances[0].NetworkInterfaces[0].Association.PublicIp"
            },
            "Resource": "arn:aws:states:::aws-sdk:ssm:putParameter",
            "Next": "Change_DNS_IP",
            "ResultPath": null
          },
          "Change_DNS_IP": {
            "Type": "Task",
            "Parameters": {
              "ChangeBatch": {
                "Changes": [
                  {
                    "Action": "UPSERT",
                    "ResourceRecordSet": {
                      "Name": "PLACEHOLDER",
                      "Type": "A",
                      "ResourceRecords": [
                        {
                          "Value.$": "$.Instances[0].NetworkInterfaces[0].Association.PublicIp"
                        }
                      ],
                      "Ttl": 1
                    }
                  }
                ]
              },
              "HostedZoneId": "PLACEHOLDER"
            },
            "Resource": "arn:aws:states:::aws-sdk:route53:changeResourceRecordSets",
            "Next": "GetParameter (1)"
          },
          "GetParameter (1)": {
            "Type": "Task",
            "Next": "DiscordServerUp",
            "Parameters": {
              "Name": "discordAPIEndpoint"
            },
            "Resource": "arn:aws:states:::aws-sdk:ssm:getParameter"
          },
          "DiscordServerUp": {
            "Type": "Task",
            "Resource": "arn:aws:states:::apigateway:invoke",
            "Parameters": {
              "ApiEndpoint.$": "$.Parameter.Value",
              "Method": "POST",
              "Headers": {
                "Content-Type": [
                  "application/json"
                ]
              },
              "Stage": "prod",
              "Path": "/",
              "QueryParameters": {},
              "RequestBody": {
                "content": "PLACEHOLDER"
              },
              "AuthType": "IAM_ROLE"
            },
            "End": true
          },
          "Skip": {
            "Type": "Pass",
            "End": true
          }
        }
      },
      "ItemsPath": "$.Reservations",
      "End": true
    },
    "WrongInstance": {
      "Type": "Pass",
      "End": true,
      "Result": {}
    }
  }
}